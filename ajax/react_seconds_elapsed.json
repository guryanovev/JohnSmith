{"id":"react_seconds_elapsed","title":"React Seconds Elapsed","children":[],"isNew":false,"markup":"<div id=\"sample\"></div>","code":"/* Declare view model */\nvar TimerViewModel = function(){\n    this.secondsElapsed = js.bindableValue();\n\n    this.initState = function(){\n        this.secondsElapsed.setValue(0);\n\n        var that = this;\n        this.timer = setInterval(function(){that.tick();}, 1000);\n    };\n\n    this.tick = function(){\n        this.secondsElapsed.setValue(this.secondsElapsed.getValue() + 1);\n    };\n\n    /* releaseState is a special function that called by JS before\n    *  view un-rendering. It says ViewModel to stop using any bindables. */\n    this.releaseState = function(){\n        clearInterval(this.timer);\n    };\n};\n\n/* Declare view */\nvar TimerView = function(){\n    // view is very simple, so we use inline template here\n    this.template = \"<p>Seconds Elapsed: <span></span></p>\";\n\n    this.init = function(view, viewModel){\n        view.bind(viewModel.secondsElapsed).to(\"span\");\n    };\n};\n\n/* Render the vew */\njs.renderView(TimerView, new TimerViewModel()).to(\"#sample\");","formattedCode":"/* Declare view model */\nvar TimerViewModel = function(){\n    this.secondsElapsed = js.bindableValue();\n\n    this.initState = function(){\n        this.secondsElapsed.setValue(0);\n\n        var that = this;\n        this.timer = setInterval(function(){that.tick();}, 1000);\n    };\n\n    this.tick = function(){\n        this.secondsElapsed.setValue(this.secondsElapsed.getValue() + 1);\n    };\n\n    /* releaseState is a special function that called by JS before\n    *  view un-rendering. It says ViewModel to stop using any bindables. */\n    this.releaseState = function(){\n        clearInterval(this.timer);\n    };\n};\n\n/* Declare view */\nvar TimerView = function(){\n    // view is very simple, so we use inline template here\n    this.template = &quot;&lt;p&gt;Seconds Elapsed: &lt;span&gt;&lt;/span&gt;&lt;/p&gt;&quot;;\n\n    this.init = function(view, viewModel){\n        view.bind(viewModel.secondsElapsed).to(&quot;span&quot;);\n    };\n};\n\n/* Render the vew */\njs.renderView(TimerView, new TimerViewModel()).to(&quot;#sample&quot;);","description":"<p>\n    Port of React very basic sample (see React <a href=\"http://facebook.github.io/react/\">Home Page</a>, section \"A Stateful Component\")\n</p>"}