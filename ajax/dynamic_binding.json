{"id":"dynamic_binding","title":"Dynamic value binding","children":[],"isNew":false,"markup":"<div id=\"dynamicBindingExample\">\n    <p>My first name is <span class=\"firstName\"></span></p>\n    <p>My last name is <span class=\"lastName\"></span></p>\n</div>\n","code":"var firstName = js.bindableValue();\nvar lastName = js.bindableValue();\n\njs.bind(firstName).to(\"#dynamicBindingExample .firstName\");\njs.bind(lastName).to(\"#dynamicBindingExample .lastName\");\n\nfirstName.setValue(\"John\");\nlastName.setValue(\"Smith\");","formattedCode":"var firstName = js.bindableValue();\nvar lastName = js.bindableValue();\n\njs.bind(firstName).to(&quot;#dynamicBindingExample .firstName&quot;);\njs.bind(lastName).to(&quot;#dynamicBindingExample .lastName&quot;);\n\nfirstName.setValue(&quot;John&quot;);\nlastName.setValue(&quot;Smith&quot;);","description":"<p>\n    This example demonstrates how you can bind dynamic values.\n</p>\n<p>\n    As a first step, you need to create a <code>bindableValue</code> &mdash; an observable object that could\n    notify listeners about value changes.\n</p>\n<p>\n    Than you can wire this object with DOM element using <code>js.bind</code> function.\n</p>\n<p>\n    As soon as binding is configured, you can call setValue method to change the value. The change reflects in the UI immediately.\n</p>"}