{"id":"view_use_for_bindable","title":"Using a view for rendering bindable value","children":[],"isNew":false,"markup":"<script id='friendTemplate' type='text/view'>\n    <div class='friend'>\n        <span class='firstName'></span>\n        <span class='lastName'></span>\n    </div>\n</script>\n\n<div id=\"myFriend\">\n</div>","code":"var friend = js.bindableValue();\n\nvar FriendView = function(){\n    this.template = \"#friendTemplate\";\n\n    this.init = function(view, viewModel){\n        view.bind(viewModel.firstName).to(\".firstName\");\n        view.bind(viewModel.lastName).to(\".lastName\");\n    };\n};\n\njs.bind(friend).to(\"#myFriend\", FriendView);\n\nfriend.setValue({\n    firstName: \"Joe\",\n    lastName: \"Bloggs\"\n});\n","formattedCode":"var friend = js.bindableValue();\n\nvar FriendView = function(){\n    this.template = &quot;#friendTemplate&quot;;\n\n    this.init = function(view, viewModel){\n        view.bind(viewModel.firstName).to(&quot;.firstName&quot;);\n        view.bind(viewModel.lastName).to(&quot;.lastName&quot;);\n    };\n};\n\njs.bind(friend).to(&quot;#myFriend&quot;, FriendView);\n\nfriend.setValue({\n    firstName: &quot;Joe&quot;,\n    lastName: &quot;Bloggs&quot;\n});\n","description":"<p>Demonstrates how views could be used to render bindable value</p>"}