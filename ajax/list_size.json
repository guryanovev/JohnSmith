{"id":"list_size","title":"Rendering list size","children":[],"isNew":false,"markup":"<div id=\"friendsCount\">\n    You have <span class=\"badge\"></span> friends.\n</div>","code":"// Create a list\nvar friendsList = js.bindableList();\n\n// Bind list size to the markup\njs.bind(friendsList.count()).to(\"#friendsCount span\");\n\n// Set list value to cause list size refresh\nfriendsList.setValue([\"Friend1\", \"Friend2\", \"Friend3\"]);","formattedCode":"// Create a list\nvar friendsList = js.bindableList();\n\n// Bind list size to the markup\njs.bind(friendsList.count()).to(&quot;#friendsCount span&quot;);\n\n// Set list value to cause list size refresh\nfriendsList.setValue([&quot;Friend1&quot;, &quot;Friend2&quot;, &quot;Friend3&quot;]);","description":"<p>\n    <code>BindableList</code> exposes a <code>count()</code> method that returns the list size object.\n    This object is a <code>BindableValue</code> instance so you can wire it to UI element using regular binding functions:\n</p>\n\n<pre><code class=\"javascript\">js.bind(someList.count()).to(\"#someListSize\")</code></pre>\n\n<p>List count gets updated every time you call one of list methods:</p>\n\n<ul>\n    <li><code>setValue</code></li>\n    <li><code>add</code></li>\n    <li><code>remove</code></li>\n</ul>\n"}